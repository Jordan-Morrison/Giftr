function setupEvents(r){return r?(selfEvents.forwardEventsTo(r),r):(CordovaLogger.get().subscribe(selfEvents),selfEvents)}function Api(r,t,e){this.platform=PLATFORM,this.root=path.resolve(__dirname,".."),this.builder="gradle",setupEvents(e);var o=this;this.locations={root:o.root,www:path.join(o.root,"assets/www"),res:path.join(o.root,"res"),platformWww:path.join(o.root,"platform_www"),configXml:path.join(o.root,"res/xml/config.xml"),defaultConfigXml:path.join(o.root,"cordova/defaults.xml"),strings:path.join(o.root,"res/values/strings.xml"),manifest:path.join(o.root,"AndroidManifest.xml"),build:path.join(o.root,"build"),javaSrc:path.join(o.root,"src"),cordovaJs:"bin/templates/project/assets/www/cordova.js",cordovaJsSrc:"cordova-js-src"},!0===AndroidStudio.isAndroidStudioProject(o.root)&&(selfEvents.emit("log","Android Studio project detected"),this.builder="studio",this.android_studio=!0,this.locations.configXml=path.join(o.root,"app/src/main/res/xml/config.xml"),this.locations.strings=path.join(o.root,"app/src/main/res/values/strings.xml"),this.locations.manifest=path.join(o.root,"app/src/main/AndroidManifest.xml"),this.locations.javaSrc=path.join(o.root,"app/src/main/java/"),this.locations.www=path.join(o.root,"app/src/main/assets/www"),this.locations.res=path.join(o.root,"app/src/main/res"))}var path=require("path"),Q=require("q"),AndroidProject=require("./lib/AndroidProject"),AndroidStudio=require("./lib/AndroidStudio"),PluginManager=require("cordova-common").PluginManager,CordovaLogger=require("cordova-common").CordovaLogger,selfEvents=require("cordova-common").events,PLATFORM="android";Api.createPlatform=function(r,t,e,o){o=setupEvents(o);var i;try{i=require("../../lib/create").create(r,t,e,o).then(function(r){return new(require(path.resolve(r,"cordova/Api")))(PLATFORM,r,o)})}catch(r){throw o.emit("error","createPlatform is not callable from the android project API."),r}return i},Api.updatePlatform=function(r,t,e){e=setupEvents(e);var o;try{o=require("../../lib/create").update(r,t,e).then(function(r){return new(require(path.resolve(r,"cordova/Api")))("android",r,e)})}catch(r){throw e.emit("error","updatePlatform is not callable from the android project API, you will need to do this manually."),r}return o},Api.prototype.getPlatformInfo=function(){var r={};return r.locations=this.locations,r.root=this.root,r.name=this.platform,r.version=require("./version"),r.projectConfig=this._config,r},Api.prototype.prepare=function(r,t){return require("./lib/prepare").prepare.call(this,r,t)},Api.prototype.addPlugin=function(r,t){var e=AndroidProject.getProjectFile(this.root),o=this;return t=t||{},t.variables=t.variables||{},t.variables.PACKAGE_NAME||(t.variables.PACKAGE_NAME=e.getPackageName()),!0===this.android_studio&&(t.android_studio=!0),Q().then(function(){var r={};if(r.noPrepare=!0,!AndroidStudio.isAndroidStudioProject(o.root)&&!e.isClean())return o.clean(r)}).then(function(){return PluginManager.get(o.platform,o.locations,e).addPlugin(r,t)}).then(function(){0!==r.getFrameworks(this.platform).length&&(selfEvents.emit("verbose","Updating build files since android plugin contained <framework>"),require("./lib/builders/builders").getBuilder(this.builder).prepBuildFiles())}.bind(this)).thenResolve(!0)},Api.prototype.removePlugin=function(r,t){var e=AndroidProject.getProjectFile(this.root);return t&&!0===t.usePlatformWww&&!0===this.android_studio&&(t.usePlatformWww=!1,t.android_studio=!0),PluginManager.get(this.platform,this.locations,e).removePlugin(r,t).then(function(){0!==r.getFrameworks(this.platform).length&&(selfEvents.emit("verbose","Updating build files since android plugin contained <framework>"),require("./lib/builders/builders").getBuilder(this.builder).prepBuildFiles())}.bind(this)).thenResolve(!0)},Api.prototype.build=function(r){var t=this;return this.android_studio&&(r.studio=!0),require("./lib/check_reqs").run().then(function(){return require("./lib/build").run.call(t,r)}).then(function(r){return r.apkPaths.map(function(t){return{buildType:r.buildType,buildMethod:r.buildMethod,path:t,type:"apk"}})})},Api.prototype.run=function(r){var t=this;return require("./lib/check_reqs").run().then(function(){return require("./lib/run").run.call(t,r)})},Api.prototype.clean=function(r){var t=this;return this.android_studio&&(void 0===r&&(r={}),r.studio=!0),require("./lib/check_reqs").run().then(function(){return require("./lib/build").runClean.call(t,r)}).then(function(){return require("./lib/prepare").clean.call(t,r)})},Api.prototype.requirements=function(){return require("./lib/check_reqs").check_all()},module.exports=Api;